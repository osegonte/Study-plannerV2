// In your App.jsx, update the handlePDFUpload function:

const handlePDFUpload = async (file, metadata) => {
  try {
    setUploadError(null);
    
    if (!file || !(file instanceof File)) {
      throw new Error('Invalid file object');
    }
    
    if (file.type !== 'application/pdf') {
      throw new Error('Only PDF files are supported');
    }
    
    if (file.size > 100 * 1024 * 1024) {
      throw new Error('File size must be less than 100MB');
    }

    // Create document data with processed information
    const documentData = addDocumentToTopic(metadata.topicId, {
      name: file.name,
      size: file.size,
      topicId: metadata.topicId,
      cacheKey: metadata.cacheKey, // Add cache key from processed data
      processedData: metadata.processedData // Add processed data
    }, 0);

    // Store the processed file data instead of raw file
    if (metadata.processedData) {
      setCurrentFileSession(prev => new Map(prev.set(documentData.id, {
        file: file,
        processedData: metadata.processedData,
        cacheKey: metadata.cacheKey
      })));
    } else {
      setCurrentFileSession(prev => new Map(prev.set(documentData.id, file)));
    }
    
    handleStartReading(file, documentData.id, metadata.topicId);
    
    return documentData;
  } catch (error) {
    console.error('Failed to upload PDF:', error);
    setUploadError(error.message);
    throw error;
  }
};
